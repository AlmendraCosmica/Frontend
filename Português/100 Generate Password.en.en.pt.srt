1
00:00:00,270 --> 00:00:05,280
Tudo bem, então temos essas funções para gerar números e símbolos maiúsculos aleatórios.

2
00:00:05,310 --> 00:00:09,390
Agora precisamos criar a funcionalidade para esta interface do usuário aqui.

3
00:00:09,390 --> 00:00:12,150
Então vou trazer tudo o que precisamos.

4
00:00:12,570 --> 00:00:20,460
Então, primeiro, vou trazer o elemento result e vamos usar os pontos do documento, obter o elemento por D..

5
00:00:20,500 --> 00:00:22,100
Temos a ideia de resultados.

6
00:00:22,100 --> 00:00:27,600
Então esse vai ser o intervalo que é esse aqui.

7
00:00:27,610 --> 00:00:29,450
É aqui que vamos querer mostrar o resultado.

8
00:00:29,670 --> 00:00:32,080
Vou copiar isso algumas vezes.

9
00:00:32,080 --> 00:00:36,900
Então, dois, três, quatro, cinco, seis, sete, oito, acho que nove.

10
00:00:37,110 --> 00:00:41,380
Então, tudo o que precisamos e então este será o comprimento.

11
00:00:42,000 --> 00:00:43,320
Então vamos chamar isso.

12
00:00:46,330 --> 00:00:49,220
Elemento de comprimento, e devemos ter um ID.

13
00:00:49,330 --> 00:00:56,350
Sim, temos um comprimento de ID de maiúsculas, minúsculas e assim por diante, devemos ter uma ideia de gerar

14
00:00:56,350 --> 00:00:56,950
aqui.

15
00:00:56,950 --> 00:01:00,190
Devemos ter uma idéia de prancheta aqui também.

16
00:01:00,190 --> 00:01:03,160
Então, queremos trazer todas essas coisas para termos comprimento.

17
00:01:03,160 --> 00:01:04,810
Vamos fazer maiúsculas.

18
00:01:07,410 --> 00:01:16,530
Então, o elemento maiúsculo, e isso tem uma ideia de maiúsculas e minúsculas.

19
00:01:20,920 --> 00:01:26,020
São elementos minúsculos e então vamos fazer o elemento números.

20
00:01:32,620 --> 00:01:34,210
E então o símbolo.

21
00:01:40,400 --> 00:01:45,290
Elemento Symbols, e então isso vai gerar um elemento, que é o botão.

22
00:01:49,500 --> 00:01:51,720
Gerar, e então temos nossa prancheta.

23
00:01:58,520 --> 00:02:04,040
Tudo bem, então isso é tudo o que queremos trazer agora, vamos começar criando um evento

24
00:02:04,040 --> 00:02:04,560
ouvinte.

25
00:02:04,580 --> 00:02:09,710
Eu vou deixar isso lá em cima, esse índice das nossas, você sabe, funções aqui embaixo.

26
00:02:09,710 --> 00:02:19,430
Mas abaixo disso, vamos pegar os elementos de geração e vamos adicionar um ouvinte de evento ao de um clique.

27
00:02:20,330 --> 00:02:23,690
E quando isso acontecer, executaremos uma função de seta.

28
00:02:24,350 --> 00:02:28,430
E eu vou pegar o elemento de comprimento aqui.

29
00:02:29,060 --> 00:02:31,280
Eu quero pegar isso e eu quero passá-lo como um número.

30
00:02:31,290 --> 00:02:32,750
Então eu vou chamar este comprimento.

31
00:02:33,230 --> 00:02:39,160
E queremos um elemento de comprimento, valor de ponto, porque é uma entrada.

32
00:02:39,170 --> 00:02:45,830
Então, queremos obter o valor e podemos facilmente passar isso para um número com apenas oops, quero fazer isso.

33
00:02:45,830 --> 00:02:47,660
Basta adicionar um sinal de adição a ele.

34
00:02:48,200 --> 00:02:48,650
Tudo bem.

35
00:02:48,650 --> 00:02:58,040
Então, se eu cancelar o comprimento do log aqui e abrirmos nosso console e eu clicar em gerar, obtemos 20 e é um número,

36
00:02:59,270 --> 00:03:04,120
se eu tirar esse sinal de mais e gerar é 20, mas é branco, na verdade é uma string.

37
00:03:04,130 --> 00:03:06,100
Então isso irá convertê-lo em um número.

38
00:03:06,680 --> 00:03:07,000
Tudo bem.

39
00:03:07,010 --> 00:03:12,750
Então, queremos obter o comprimento que queremos obter se essas são verificações que queremos saber.

40
00:03:12,770 --> 00:03:19,070
Então, basicamente, você sabe, se esses dois estão desmarcados e estes estão marcados, queremos saber porque

41
00:03:19,070 --> 00:03:20,480
precisamos saber o que gerar.

42
00:03:20,510 --> 00:03:28,790
Então, digamos que CONSED tem menor e vamos definir isso para o elemento minúsculo, valor dot, que

43
00:03:28,790 --> 00:03:30,440
será verdadeiro ou falso.

44
00:03:31,070 --> 00:03:32,870
OK, faremos o consentimento.

45
00:03:32,870 --> 00:03:34,960
Apenas copie isso para baixo.

46
00:03:36,200 --> 00:03:41,660
Então isso é minúsculo do que nós também vamos chamar em maiúsculas.

47
00:03:41,660 --> 00:03:57,350
Este tem superior e o Sonobe não tem e este é o nosso elemento de números de números e depois o elemento de símbolos

48
00:03:57,350 --> 00:04:06,020
valor será tem um símbolo e então vamos em frente e apenas cancelar o log aqui.

49
00:04:06,020 --> 00:04:17,420
Tem inferior, tem superior não tem e tem o símbolo.

50
00:04:18,290 --> 00:04:23,560
Então, se eu for em frente e gerar, não podemos extrair o valor da propriedade.

51
00:04:23,570 --> 00:04:26,080
Agora é.

52
00:04:29,530 --> 00:04:31,760
Ah, eu coloco valor aqui.

53
00:04:31,780 --> 00:04:38,020
Então, essas são caixas de seleção, não queremos valor, queremos marcadas, então só queremos alterar essas duas

54
00:04:38,020 --> 00:04:38,620
verificado.

55
00:04:39,740 --> 00:04:49,400
Tudo bem, então cozinhe isso e ainda teremos esse erro porque o elemento de um Broca que eu escrevi errado

56
00:04:49,400 --> 00:04:52,640
aqui, eu soletrei errado aqui.

57
00:04:53,120 --> 00:04:54,380
Portanto, maiúsculas.

58
00:04:55,370 --> 00:05:01,160
Tudo bem, então se eu clicar em gerar, eu recebo true, recebo para True agora, se eu tirar esses dois Vij

59
00:05:01,160 --> 00:05:03,800
desmarque estes e eu verifico, recebo falso.

60
00:05:03,800 --> 00:05:05,090
Falso, verdadeiro, verdadeiro.

61
00:05:05,540 --> 00:05:05,930
Tudo bem.

62
00:05:05,930 --> 00:05:08,280
Então vai nos dar um verdadeiro ou falso.

63
00:05:08,870 --> 00:05:13,070
Agora vamos definir vamos nos livrar do log do console.

64
00:05:13,070 --> 00:05:23,630
Mas mantenha isso e direi que os elementos de resultado definem o texto interno igual a e então vamos

65
00:05:23,630 --> 00:05:31,370
ter uma função chamada gerar senha e ela vai receber todas essas coisas.

66
00:05:31,730 --> 00:05:36,090
E também vai demorar o comprimento que queremos que a senha seja, que é esta aqui.

67
00:05:36,410 --> 00:05:38,660
OK, então estamos apenas criando um vamos criar uma função.

68
00:05:38,660 --> 00:05:44,960
Vamos passar todas essas informações, que serão o comprimento, bem como todos os booleanos para cada

69
00:05:44,960 --> 00:05:45,500
destes.

70
00:05:45,980 --> 00:05:47,780
Então vamos criar essa função.

71
00:05:48,030 --> 00:05:58,670
Isso é uma função, gera uma senha, e vai pegar, digamos, opper inferior, fazer

72
00:05:58,670 --> 00:06:02,810
com certeza, você sabe, reflete o que estamos passando para ele.

73
00:06:02,810 --> 00:06:10,800
Portanto, abaixe o número superior, o símbolo e o comprimento.

74
00:06:11,210 --> 00:06:18,980
OK, então vai pegar essas coisas aqui e então vamos em frente e inicializar uma variável

75
00:06:18,980 --> 00:06:24,980
chamado senha gerada, que vai representar as senhas geradas e vai ser

76
00:06:24,980 --> 00:06:26,420
apenas vazio por padrão.

77
00:06:27,110 --> 00:06:30,370
Então eu quero obter a contagem de tipos.

78
00:06:30,380 --> 00:06:35,980
Então, o que quero dizer com tipos é, você sabe, esse número e símbolo superior inferior.

79
00:06:36,650 --> 00:06:48,260
Então, e o que é verdade, então digamos const baixo, não consed tipos const mais baixos contam e defina isso para baixo

80
00:06:48,740 --> 00:06:56,300
mais superior mais número mais símbolo.

81
00:06:56,330 --> 00:07:00,370
OK, e podemos ir em frente e logar no console e ver o que isso nos dá.

82
00:07:00,380 --> 00:07:05,930
Se eu fizer a contagem do tipo enviar que damos, se eu desmarcar dois desses, recebo dois.

83
00:07:05,930 --> 00:07:09,440
Então vai me dar a contagem de, você sabe, quantos são selecionados.

84
00:07:10,700 --> 00:07:15,010
Agora eu quero realmente criar uma matriz de tipos.

85
00:07:16,010 --> 00:07:22,960
Então, digamos const type array e vamos definir isso como um array.

86
00:07:22,970 --> 00:07:26,480
E aqui dentro, queremos envolvê-los em chaves mais baixas.

87
00:07:27,980 --> 00:07:30,940
O que eu quero terminar é algo que se pareça com isso.

88
00:07:31,280 --> 00:07:39,530
Então, uma matriz com objetos que têm como menor true que seria como o primeiro e então teríamos

89
00:07:39,530 --> 00:07:41,180
superior verdadeiro ou falso.

90
00:07:41,330 --> 00:07:42,800
Então é assim que eu quero que isso pareça.

91
00:07:42,810 --> 00:07:45,920
Então vamos dizer mais baixo.

92
00:07:48,140 --> 00:07:48,800
Superior.

93
00:07:52,080 --> 00:07:58,740
Número e símbolo de um Akama.

94
00:08:01,460 --> 00:08:02,070
OK.

95
00:08:02,090 --> 00:08:06,740
E se cancelarmos assim, e eu estou apenas registrando tudo no console para que você possa ver exatamente o que

96
00:08:06,740 --> 00:08:07,440
nos dá.

97
00:08:07,910 --> 00:08:12,440
Então aqui temos apenas uma matriz e temos menor, você sabe, verdade.

98
00:08:13,970 --> 00:08:19,850
Desmarque esses, temos falso inferior, falso superior e assim por diante.

99
00:08:20,250 --> 00:08:26,780
No entanto, o que eu quero fazer é se for falso, como se esses dois forem falsos, eu nem os quero

100
00:08:26,780 --> 00:08:27,820
nesta matriz.

101
00:08:28,100 --> 00:08:31,130
Portanto, isso deve ser apenas dois com a verdade.

102
00:08:31,460 --> 00:08:34,630
Então, podemos fazer isso filtrando esse array.

103
00:08:34,640 --> 00:08:44,270
Então esse tipo array é igual a array, filtro de pontos e vamos salvar para cada item.

104
00:08:45,380 --> 00:08:56,030
Vamos usar valores de ponto de objeto desse item específico e queremos o primeiro item.

105
00:08:56,060 --> 00:09:02,090
Então, basicamente, o que isso fará é filtrar qualquer coisa que tenha false como valor.

106
00:09:02,300 --> 00:09:10,430
Então agora se eu salvar isso e desmarcar os dois primeiros e eu gerar agora você pode ver que eu só recebo número e

107
00:09:10,430 --> 00:09:14,960
símbolo porque esses são os únicos que são verificados em vez de obter todos os quatro e apenas dizer

108
00:09:14,960 --> 00:09:22,340
false, se eu verificar todos esses, obteremos quatro que são todos verdadeiros.

109
00:09:23,780 --> 00:09:26,780
OK, então a próxima coisa, agora que temos isso.

110
00:09:28,320 --> 00:09:34,720
Vamos verificar e ver se não há tempo, porque se nada for realmente verificado, nós apenas

111
00:09:34,740 --> 00:09:36,000
não quer fazer nada certo.

112
00:09:38,130 --> 00:09:40,050
E observe que isso diz indefinido agora.

113
00:09:40,060 --> 00:09:41,480
Isso é bom por enquanto.

114
00:09:42,120 --> 00:09:48,330
Então, vou verificar se podemos fazer isso verificando a contagem de tipos, que defini acima.

115
00:09:48,330 --> 00:09:53,920
Se essa contagem de tipos for igual a zero, vamos apenas devolvê-la.

116
00:09:53,970 --> 00:09:56,420
Não retornaremos nada, uma string vazia.

117
00:09:56,880 --> 00:10:00,210
Então aqui em cima, quero dizer, se eu fizer isso, ficaremos indefinidos.

118
00:10:00,210 --> 00:10:05,160
Mas se eu desmarcar tudo e gerar não obtemos nada, o que é bom.

119
00:10:05,160 --> 00:10:08,600
Isso é o que queremos é que não estamos verificando nada disso.

120
00:10:09,330 --> 00:10:09,810
Tudo bem.

121
00:10:09,840 --> 00:10:14,100
Agora, para realmente criar a senha aqui.

122
00:10:14,100 --> 00:10:17,910
Como todos os personagens, vamos criar um loop for.

123
00:10:19,350 --> 00:10:20,480
E nós temos tudo isso.

124
00:10:20,490 --> 00:10:22,070
Nós temos essas funções aqui.

125
00:10:22,090 --> 00:10:24,990
Temos basicamente um índice deles aqui.

126
00:10:25,620 --> 00:10:27,420
Então, abaixe o símbolo do número superior.

127
00:10:27,420 --> 00:10:30,030
E esses devem corresponder a esses símbolos de números superiores inferiores.

128
00:10:30,930 --> 00:10:32,730
E vamos fazer um loop for aqui.

129
00:10:32,730 --> 00:10:35,130
Digamos que let é igual a zero.

130
00:10:35,670 --> 00:10:42,000
E queremos dizer se I é menor que o comprimento.

131
00:10:42,690 --> 00:10:45,150
OK, então significando isso aqui.

132
00:10:45,150 --> 00:10:47,010
Nesse caso, é 20 por padrão.

133
00:10:47,580 --> 00:10:55,800
E então queremos incrementar I queremos incrementar I com a contagem, qualquer que seja a contagem.

134
00:10:55,800 --> 00:11:06,520
Os tipos contam, então mais os iguais contam, o que será, você sabe, o que quer que verifiquemos aqui.

135
00:11:08,100 --> 00:11:16,950
Então, neste loop, vamos pegar o array de tipos e queremos percorrer isso com um para cada e dizer

136
00:11:16,950 --> 00:11:18,720
para cada tipo.

137
00:11:21,950 --> 00:11:30,560
Para cada tipo, vamos construir um nome de funk seguro e basicamente queremos obter.

138
00:11:32,460 --> 00:11:39,960
Deste tipo aqui, porque isso é, deixe-me apenas logar no console, na verdade, se eu console o logotipo,

139
00:11:39,960 --> 00:11:42,300
vamos ver o que temos.

140
00:11:42,300 --> 00:11:44,510
Então eu vou gerar nós temos um número.

141
00:11:45,000 --> 00:11:47,370
Portanto, nenhum símbolo verdadeiro.

142
00:11:47,370 --> 00:11:48,210
Verdade mais baixo.

143
00:11:48,210 --> 00:11:49,310
Verdadeiro superior.

144
00:11:49,320 --> 00:11:53,970
Quero dizer, todas elas serão verdadeiras, mas não é nenhum símbolo, inferior superior, nenhum símbolo.

145
00:11:55,510 --> 00:11:59,160
OK, então, quero dizer, sempre vai ser nessa ordem.

146
00:11:59,160 --> 00:12:02,970
Você poderia randomizar, mas eu acho que está tudo bem.

147
00:12:02,970 --> 00:12:05,630
Vai ser um símbolo de número aleatório, inferior, superior.

148
00:12:06,540 --> 00:12:18,450
Então, o que queremos fazer com isso é obter a função para o símbolo numérico inferior, superior com base nisso

149
00:12:18,450 --> 00:12:18,990
aqui.

150
00:12:19,290 --> 00:12:23,370
Então, basicamente, obterá, você sabe, o retorno dessa função específica.

151
00:12:23,610 --> 00:12:27,810
E podemos fazer isso, digamos const func name.

152
00:12:28,740 --> 00:12:37,200
E se usarmos o método object keys ao passar o tipo, queremos obter o primeiro valor.

153
00:12:37,770 --> 00:12:38,940
Tão zero.

154
00:12:40,260 --> 00:12:45,730
E só para mostrar o que isso nos dá, vamos fazer um log de console do tipo func.

155
00:12:46,680 --> 00:12:48,630
Então isso não nos dá.

156
00:12:48,630 --> 00:12:49,260
Tipo func.

157
00:12:49,260 --> 00:12:49,950
Nome func.

158
00:12:53,200 --> 00:13:03,710
Então isso nos dá ou nenhum símbolo mais baixo agora podemos pegar esse objeto funk aleatório aqui, que tem esses

159
00:13:03,710 --> 00:13:13,540
como chaves e queremos chamar isso, então digamos que a senha gerada foi gerada, não gera gerada

160
00:13:13,540 --> 00:13:16,270
password é a string que está vazia agora.

161
00:13:16,270 --> 00:13:18,730
E queremos gastar com isso.

162
00:13:18,730 --> 00:13:26,260
Então, mais é igual a nós vamos depender dele e então pegar nosso objeto func aleatório e então passar

163
00:13:26,260 --> 00:13:29,080
como um índice, qualquer que seja o nome do funk.

164
00:13:29,780 --> 00:13:37,010
OK, quais serão esses aqui e queremos chamar a função, então queremos colocar um parênteses lá.

165
00:13:37,180 --> 00:13:42,340
Então isso vai basicamente fazer um loop, seja qual for o comprimento e nós vamos terminar

166
00:13:42,340 --> 00:13:45,430
com letras maiúsculas aleatórias.

167
00:13:45,430 --> 00:13:48,010
Não, desculpe, em maiúsculas.

168
00:13:49,210 --> 00:13:50,200
Qual é a ordem aqui?

169
00:13:50,200 --> 00:13:54,370
Minúsculas, maiúsculas, número, símbolo, minúsculas, maiúsculas, sem símbolo.

170
00:13:54,370 --> 00:13:59,020
Será na mesma ordem, mas será gerado e será diferente a cada vez

171
00:13:59,020 --> 00:13:59,680
nós geramos.

172
00:13:59,920 --> 00:14:01,990
E vai fazer isso até este comprimento.

173
00:14:02,380 --> 00:14:05,110
Agora queremos retornar isso desta função.

174
00:14:05,650 --> 00:14:16,720
Então, precisamos sair de todo esse loop for aqui e, em seguida, digamos a senha final const e vamos

175
00:14:16,720 --> 00:14:22,420
defina isso para senha gerada, certifique-se de que seja gerado e não gere porque esse é o nome de

176
00:14:22,420 --> 00:14:23,110
a função.

177
00:14:23,530 --> 00:14:26,350
E vamos usar fatia aqui, que vamos fatiar.

178
00:14:26,350 --> 00:14:33,460
Então, vamos de zero a qualquer que seja o comprimento, que é 20 por padrão.

179
00:14:33,460 --> 00:14:37,000
E então vamos retornar a senha final.

180
00:14:37,370 --> 00:14:37,780
Tudo bem.

181
00:14:37,790 --> 00:14:43,120
E o que for retornado de gerar senha, lembre-se, é colocado no texto interno do resultado

182
00:14:43,120 --> 00:14:44,370
elemento, que é este.

183
00:14:44,800 --> 00:14:48,340
Então, se eu clicar em gerar, obteremos 20 caracteres aleatórios.

184
00:14:49,060 --> 00:14:58,330
Se eu mudar isso para cinco e clicar em gerar OK, se eu quiser, vamos nos livrar de símbolos e números

185
00:14:58,900 --> 00:15:05,020
e eu quero clicar aqui e gerar ainda vou pegar cinco caracteres, mas eles só vão

186
00:15:05,020 --> 00:15:08,830
para ser composto de, você sabe, letras maiúsculas e minúsculas.

187
00:15:12,080 --> 00:15:17,720
Tudo bem, agora, não importa qual seja o comprimento, como eu disse, sempre será a mesma ordem

188
00:15:17,720 --> 00:15:21,010
de tipos, que é minúsculo, símbolo maiúsculo.

189
00:15:22,430 --> 00:15:25,070
Na verdade, não há número porque deixei desmarcado.

190
00:15:25,070 --> 00:15:29,870
Se houvesse e seria número e então, você sabe, letras minúsculas, símbolos maiúsculos, letras minúsculas,

191
00:15:29,870 --> 00:15:30,600
símbolo maiúsculo.

192
00:15:30,740 --> 00:15:32,240
Então será o mesmo tipo de ordem.

193
00:15:32,240 --> 00:15:37,670
E você pode adicionar mais código aqui se quiser randomizar isso, talvez isso possa ser visto

194
00:15:37,670 --> 00:15:39,200
como um desafio para você.

195
00:15:39,590 --> 00:15:41,360
Mas vou deixar assim.

196
00:15:41,360 --> 00:15:45,680
Sempre vai ser algo diferente, você sabe, é apenas a mesma ordem de tipo.

197
00:15:47,060 --> 00:15:48,920
Então é isso.

198
00:15:48,920 --> 00:15:54,620
Para essa parte, a próxima coisa que queremos fazer é clicar nisso e tê-lo em nossa área de transferência

199
00:15:54,620 --> 00:15:57,590
então eu posso descer e eu posso, você sabe, eu posso colar em algum lugar.

200
00:15:58,400 --> 00:16:00,110
Então é nisso que vamos trabalhar a seguir.
