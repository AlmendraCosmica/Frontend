1
00:00:00,270 --> 00:00:05,280
All right, so we have these functions to generate random lowercase uppercase numbers and symbols.

2
00:00:05,310 --> 00:00:09,390
Now we need to create the functionality for this UI here.

3
00:00:09,390 --> 00:00:12,150
So I'm going to just bring in everything we need.

4
00:00:12,570 --> 00:00:20,460
So first, I'm going to bring in the result element and let's use document dots, get element by D..

5
00:00:20,500 --> 00:00:22,100
We have the idea of results.

6
00:00:22,100 --> 00:00:27,600
So that's going to be the span that is this right here.

7
00:00:27,610 --> 00:00:29,450
This is where we're going to want to show the result.

8
00:00:29,670 --> 00:00:32,080
I'm going to copy this down a few times.

9
00:00:32,080 --> 00:00:36,900
So two, three, four, five, six, seven, eight, I think nine.

10
00:00:37,110 --> 00:00:41,380
So all we need and then this is going to be the length.

11
00:00:42,000 --> 00:00:43,320
So let's call this.

12
00:00:46,330 --> 00:00:49,220
Length element, and we should have an I.D..

13
00:00:49,330 --> 00:00:56,350
Yes, we have an I.D. length of uppercase, lowercase and so on, we should have an idea of generate

14
00:00:56,350 --> 00:00:56,950
here.

15
00:00:56,950 --> 00:01:00,190
We should have an idea of clipboard here as well.

16
00:01:00,190 --> 00:01:03,160
So we want to bring all that stuff in so we have length.

17
00:01:03,160 --> 00:01:04,810
Let's do uppercase.

18
00:01:07,410 --> 00:01:16,530
So upper case element, and that has an idea of upper case and lower case.

19
00:01:20,920 --> 00:01:26,020
It's lower case elements and then let's do numbers element.

20
00:01:32,620 --> 00:01:34,210
And then symbol's.

21
00:01:40,400 --> 00:01:45,290
Symbols element, and then this is going to be the generate an element, which is the button.

22
00:01:49,500 --> 00:01:51,720
Generate, and then we have our clipboard.

23
00:01:58,520 --> 00:02:04,040
All right, so that's everything that we want to bring in now, let's start off by creating an event

24
00:02:04,040 --> 00:02:04,560
listener.

25
00:02:04,580 --> 00:02:09,710
I'm going to leave this up top, this index of our, you know, functions down here.

26
00:02:09,710 --> 00:02:19,430
But under that, let's take generates elements and let's add an event listener onto that of a click.

27
00:02:20,330 --> 00:02:23,690
And when that happens, we'll run an arrow function.

28
00:02:24,350 --> 00:02:28,430
And I'm going to get the length element here.

29
00:02:29,060 --> 00:02:31,280
I want to get that and I want to pass it as a number.

30
00:02:31,290 --> 00:02:32,750
So I'm going to call this length.

31
00:02:33,230 --> 00:02:39,160
And we want a length element, dot value, because it's an input.

32
00:02:39,170 --> 00:02:45,830
So we want to get the value and we can easily pass this to a number with just oops, I want to do that.

33
00:02:45,830 --> 00:02:47,660
Just adding a plus sign on to it.

34
00:02:48,200 --> 00:02:48,650
All right.

35
00:02:48,650 --> 00:02:58,040
So if I cancel log here length and we open our console and I click generate, we get 20 and it's a number,

36
00:02:59,270 --> 00:03:04,120
if I take that plus sign away and I generate it's 20, but it's white, it's actually a string.

37
00:03:04,130 --> 00:03:06,100
So this will convert it to a number.

38
00:03:06,680 --> 00:03:07,000
All right.

39
00:03:07,010 --> 00:03:12,750
So we want to get the length we want to get if these are checks we want to know.

40
00:03:12,770 --> 00:03:19,070
So basically, you know, if these two are unchecked and these are checked, we want to know because

41
00:03:19,070 --> 00:03:20,480
we need to know what to generate.

42
00:03:20,510 --> 00:03:28,790
So let's say CONSED has lower and we're going to set that to the lower case element, dot value, which

43
00:03:28,790 --> 00:03:30,440
will either be true or false.

44
00:03:31,070 --> 00:03:32,870
OK, we'll do consentual.

45
00:03:32,870 --> 00:03:34,960
Just copy that down.

46
00:03:36,200 --> 00:03:41,660
So that's lower case than we also on the upper case will call.

47
00:03:41,660 --> 00:03:57,350
This has upper and the Sonobe has no and this is our numbers numbers element and then symbols element

48
00:03:57,350 --> 00:04:06,020
value will be has a symbol and then let's go ahead and just cancel log here.

49
00:04:06,020 --> 00:04:17,420
Has lower, has upper has no and has the symbol.

50
00:04:18,290 --> 00:04:23,560
So if I go ahead and generate we get cannot riprap property value.

51
00:04:23,570 --> 00:04:26,080
Now it's.

52
00:04:29,530 --> 00:04:31,760
Oh, I put value here.

53
00:04:31,780 --> 00:04:38,020
So these are checkboxes, we don't want value, we want checked, so we just want to change these two

54
00:04:38,020 --> 00:04:38,620
checked.

55
00:04:39,740 --> 00:04:49,400
All right, so cook that and we still get that error because a Broca's element that I misspell it up

56
00:04:49,400 --> 00:04:52,640
here, I spell misspelled it right here.

57
00:04:53,120 --> 00:04:54,380
So upper case.

58
00:04:55,370 --> 00:05:01,160
All right, so if I click generate, I get true, I get for True's now, if I take away these two Vij

59
00:05:01,160 --> 00:05:03,800
uncheck these and I check, I get false.

60
00:05:03,800 --> 00:05:05,090
False, true, true.

61
00:05:05,540 --> 00:05:05,930
All right.

62
00:05:05,930 --> 00:05:08,280
So it's going to give us either a true or false.

63
00:05:08,870 --> 00:05:13,070
Now we're going to set let's get rid of the console log.

64
00:05:13,070 --> 00:05:23,630
But keep this and I'm going to say the result elements set the inner text equal to and then we're going

65
00:05:23,630 --> 00:05:31,370
to have a function called generate password and it's going to take in all of this stuff.

66
00:05:31,730 --> 00:05:36,090
And it's also going to take in the length we want the password to be, which is this right here.

67
00:05:36,410 --> 00:05:38,660
OK, so we're just creating a we're going to create a function.

68
00:05:38,660 --> 00:05:44,960
We're going to pass in all this info, which will be the length, as well as all the booleans for each

69
00:05:44,960 --> 00:05:45,500
of these.

70
00:05:45,980 --> 00:05:47,780
So let's create that function.

71
00:05:48,030 --> 00:05:58,670
That's a function, generate a password, and it's going to take in, let's say, lower opper, make

72
00:05:58,670 --> 00:06:02,810
sure it, you know, reflects what we're passing into it.

73
00:06:02,810 --> 00:06:10,800
So lower upper number and symbol and length.

74
00:06:11,210 --> 00:06:18,980
OK, so it's going to take in this stuff here and then let's let's go ahead and just initialize a variable

75
00:06:18,980 --> 00:06:24,980
called generated password, which is going to represent the passwords generated and it's going to be

76
00:06:24,980 --> 00:06:26,420
just empty by default.

77
00:06:27,110 --> 00:06:30,370
Then I want to get the types count.

78
00:06:30,380 --> 00:06:35,980
So what I mean by types is, you know, this lower upper number and symbol.

79
00:06:36,650 --> 00:06:48,260
So and what is true, so let's say const low, not consed lower const types count and set that to lower

80
00:06:48,740 --> 00:06:56,300
plus upper plus number plus symbol.

81
00:06:56,330 --> 00:07:00,370
OK, and we can go ahead and console log and see what that gives us.

82
00:07:00,380 --> 00:07:05,930
If I do type's count submit that we give for if I uncheck two of these I get two.

83
00:07:05,930 --> 00:07:09,440
So it's going to give me the count of, you know, how many are selected.

84
00:07:10,700 --> 00:07:15,010
Now I want to actually create an array of types.

85
00:07:16,010 --> 00:07:22,960
So let's say const types array and let's set that to an array.

86
00:07:22,970 --> 00:07:26,480
And inside here, we want to wrap these in curly braces lower.

87
00:07:27,980 --> 00:07:30,940
What I want to end up with is something that looks like this.

88
00:07:31,280 --> 00:07:39,530
So an array with objects that have like lower true that would be like the first one and then we'd have

89
00:07:39,530 --> 00:07:41,180
upper true or false.

90
00:07:41,330 --> 00:07:42,800
So that's what I want this to look like.

91
00:07:42,810 --> 00:07:45,920
So we're going to say lower.

92
00:07:48,140 --> 00:07:48,800
Upper.

93
00:07:52,080 --> 00:07:58,740
Number and symbol of should a Akama.

94
00:08:01,460 --> 00:08:02,070
OK.

95
00:08:02,090 --> 00:08:06,740
And if we cancel like that, and I'm just console logging everything so you can see exactly what it

96
00:08:06,740 --> 00:08:07,440
gives us.

97
00:08:07,910 --> 00:08:12,440
So here we just have an array and we have lower, you know, true.

98
00:08:13,970 --> 00:08:19,850
Uncheck those, we get lower false, upper false and so on.

99
00:08:20,250 --> 00:08:26,780
However, what I want to do is if it's false, like if these two are false, I don't even want them

100
00:08:26,780 --> 00:08:27,820
in this array.

101
00:08:28,100 --> 00:08:31,130
So this should ultimately be just two with the truth.

102
00:08:31,460 --> 00:08:34,630
So we can do that by filtering this array.

103
00:08:34,640 --> 00:08:44,270
So this type array equals array, dot filter and we'll save for each item.

104
00:08:45,380 --> 00:08:56,030
We're going to use object dot values of that particular item and we want the first item.

105
00:08:56,060 --> 00:09:02,090
So basically what this will do is filter out anything that has false as a value.

106
00:09:02,300 --> 00:09:10,430
So now if I save this and I uncheck the first two and I generate now you can see I only get number and

107
00:09:10,430 --> 00:09:14,960
symbol because those are the only ones that are checked instead of getting all four and just saying

108
00:09:14,960 --> 00:09:22,340
false, if I check all of these, then we get four that are all true.

109
00:09:23,780 --> 00:09:26,780
OK, so next thing, now that we have that.

110
00:09:28,320 --> 00:09:34,720
Let's let's check and see if if there's no time, because if nothing is actually checked, we just we

111
00:09:34,740 --> 00:09:36,000
don't want to do anything right.

112
00:09:38,130 --> 00:09:40,050
And notice this says undefined right now.

113
00:09:40,060 --> 00:09:41,480
That's that's fine for now.

114
00:09:42,120 --> 00:09:48,330
So I'm going to check if we can do this by checking the types count, which I defined above.

115
00:09:48,330 --> 00:09:53,920
If that types count is equal to zero, then let's just return it.

116
00:09:53,970 --> 00:09:56,420
We'll return nothing, an empty string.

117
00:09:56,880 --> 00:10:00,210
So up here, I mean, if I do that, we get undefined.

118
00:10:00,210 --> 00:10:05,160
But if I uncheck everything and generate we get nothing, which is fine.

119
00:10:05,160 --> 00:10:08,600
That's what we want is we're not checking any of these.

120
00:10:09,330 --> 00:10:09,810
All right.

121
00:10:09,840 --> 00:10:14,100
Now to actually create the password here.

122
00:10:14,100 --> 00:10:17,910
Like all the characters, we're going to create a for loop.

123
00:10:19,350 --> 00:10:20,480
And we have all that.

124
00:10:20,490 --> 00:10:22,070
We have these functions down here.

125
00:10:22,090 --> 00:10:24,990
We have basically an index of them here.

126
00:10:25,620 --> 00:10:27,420
So lower upper number symbol.

127
00:10:27,420 --> 00:10:30,030
And those should match these lower upper numbers symbol.

128
00:10:30,930 --> 00:10:32,730
And we're going to do a for loop here.

129
00:10:32,730 --> 00:10:35,130
Let's say let equals zero.

130
00:10:35,670 --> 00:10:42,000
And we want to say if I is less than the length.

131
00:10:42,690 --> 00:10:45,150
OK, so meaning this right here.

132
00:10:45,150 --> 00:10:47,010
In this case, it's 20 by default.

133
00:10:47,580 --> 00:10:55,800
And then we want to increment I we want to increment I with the count, whatever the count is.

134
00:10:55,800 --> 00:11:06,520
So types count so plus equals types count, which is going to be, you know, whatever we check here.

135
00:11:08,100 --> 00:11:16,950
So in this loop, let's take the types array and we want to loop through that with a for each and say

136
00:11:16,950 --> 00:11:18,720
for each type.

137
00:11:21,950 --> 00:11:30,560
For each type, let's construct will safe funk name and basically want to get.

138
00:11:32,460 --> 00:11:39,960
From this type here, because this is let me just console log this, actually, if I console logotype,

139
00:11:39,960 --> 00:11:42,300
let's just see what we get.

140
00:11:42,300 --> 00:11:44,510
So I'll generate we get a number.

141
00:11:45,000 --> 00:11:47,370
So no true symbol.

142
00:11:47,370 --> 00:11:48,210
True lower.

143
00:11:48,210 --> 00:11:49,310
True upper.

144
00:11:49,320 --> 00:11:53,970
I mean, they're all going to be true, but it's no symbol, lower upper, no symbol.

145
00:11:55,510 --> 00:11:59,160
OK, so, I mean, it's always going to be in that order.

146
00:11:59,160 --> 00:12:02,970
You could randomize it, but I think it's fine.

147
00:12:02,970 --> 00:12:05,630
It's going to be a random number symbol, lower, upper.

148
00:12:06,540 --> 00:12:18,450
So what we want to do with that is get the function for number symbol lower, upper based on this up

149
00:12:18,450 --> 00:12:18,990
here.

150
00:12:19,290 --> 00:12:23,370
So it'll basically get, you know, what's return from that specific function.

151
00:12:23,610 --> 00:12:27,810
And we can do that, let's say const func name.

152
00:12:28,740 --> 00:12:37,200
And if we use the object keys method in passing the type, we want to get the first value.

153
00:12:37,770 --> 00:12:38,940
So zero.

154
00:12:40,260 --> 00:12:45,730
And just to show you what that gives us, let's do a console log of func type.

155
00:12:46,680 --> 00:12:48,630
So that gives us not.

156
00:12:48,630 --> 00:12:49,260
Func type.

157
00:12:49,260 --> 00:12:49,950
Func name.

158
00:12:53,200 --> 00:13:03,710
So that gives us up or no symbol lower now we can take this random funk object here, which has these

159
00:13:03,710 --> 00:13:13,540
as keys and we want to call that so let's say generated password generated, not generate generated

160
00:13:13,540 --> 00:13:16,270
password is the string that is empty right now.

161
00:13:16,270 --> 00:13:18,730
And we want to spend on to that.

162
00:13:18,730 --> 00:13:26,260
So plus equals we're going to depend on to it and then take our random func object and then pass in

163
00:13:26,260 --> 00:13:29,080
as an index, whatever the funk name is.

164
00:13:29,780 --> 00:13:37,010
OK, which will be these here and we want to call the function, so we want to put a parentheses there.

165
00:13:37,180 --> 00:13:42,340
So this is going to basically just loop through however whatever the length is and we're going to end

166
00:13:42,340 --> 00:13:45,430
up with a random uppercase.

167
00:13:45,430 --> 00:13:48,010
No, I'm sorry, uppercase.

168
00:13:49,210 --> 00:13:50,200
What's the order here?

169
00:13:50,200 --> 00:13:54,370
Lowercase, uppercase, number, symbol, lowercase, uppercase, no symbol.

170
00:13:54,370 --> 00:13:59,020
It's going to be in that same order, but it'll it'll be generated and it'll be different every time

171
00:13:59,020 --> 00:13:59,680
we generate.

172
00:13:59,920 --> 00:14:01,990
And it's going to do that up until this length.

173
00:14:02,380 --> 00:14:05,110
Now we want to return that from this function.

174
00:14:05,650 --> 00:14:16,720
So we need to go outside of this whole for loop here and then let's say const final password and we'll

175
00:14:16,720 --> 00:14:22,420
set that to generated password, make sure it's generated and not generate because that's the name of

176
00:14:22,420 --> 00:14:23,110
the function.

177
00:14:23,530 --> 00:14:26,350
And we're going to use slice here, which we're going to slice.

178
00:14:26,350 --> 00:14:33,460
So we're going to get from zero to whatever the length is, which is 20 by default.

179
00:14:33,460 --> 00:14:37,000
And then we're going to return that final password.

180
00:14:37,370 --> 00:14:37,780
All right.

181
00:14:37,790 --> 00:14:43,120
And whatever is returned from generate password, remember, gets put into the inner text of the result

182
00:14:43,120 --> 00:14:44,370
element, which is this.

183
00:14:44,800 --> 00:14:48,340
So if I click generate, we're going to get 20 random characters.

184
00:14:49,060 --> 00:14:58,330
If I change that to five and I click generate OK, if I want, let's get rid of symbols and numbers

185
00:14:58,900 --> 00:15:05,020
and I want to click this and generate I'm still going to get five characters, but they're only going

186
00:15:05,020 --> 00:15:08,830
to be made up of, you know, uppercase and lowercase letters.

187
00:15:12,080 --> 00:15:17,720
All right, now, no matter what the length is, like I said, it's always going to be the same order

188
00:15:17,720 --> 00:15:21,010
of types, which is lowercase, uppercase symbol.

189
00:15:22,430 --> 00:15:25,070
Actually, there's no number because I left that unchecked.

190
00:15:25,070 --> 00:15:29,870
If there was and it would be number and then, you know, lowercase, uppercase symbol, lowercase,

191
00:15:29,870 --> 00:15:30,600
uppercase symbol.

192
00:15:30,740 --> 00:15:32,240
So it'll be that same type order.

193
00:15:32,240 --> 00:15:37,670
And you can you can add some more code here if you want to randomize that, maybe that can be looked

194
00:15:37,670 --> 00:15:39,200
at as a challenge for you.

195
00:15:39,590 --> 00:15:41,360
But I'm just going to leave it as that.

196
00:15:41,360 --> 00:15:45,680
It's always going to be something different, you know, it's just the same type order.

197
00:15:47,060 --> 00:15:48,920
So that's it.

198
00:15:48,920 --> 00:15:54,620
For that part of this, the next thing we want to do is be able to click this and have it in our clipboard

199
00:15:54,620 --> 00:15:57,590
so I can come down and I can, you know, I can paste it somewhere.

200
00:15:58,400 --> 00:16:00,110
So that's what we're going to work on next.
