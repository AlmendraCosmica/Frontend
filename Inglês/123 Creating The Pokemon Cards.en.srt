1
00:00:00,210 --> 00:00:05,460
OK, so now we're able to fetch the data or just console logging it, though, we want to insert it

2
00:00:05,460 --> 00:00:06,300
into the dorm.

3
00:00:06,300 --> 00:00:15,930
So let's replace this console log here with a function and we'll call that create Pokémon card.

4
00:00:16,350 --> 00:00:18,470
And it's going to take in the Pokémon data.

5
00:00:18,480 --> 00:00:26,990
So here will say CONSED create Pokemon card and that's going to take in data.

6
00:00:27,000 --> 00:00:28,180
We'll call Pokémon.

7
00:00:29,780 --> 00:00:33,990
OK, so for each, for each one that we fetch, it's going to create a card.

8
00:00:35,910 --> 00:00:41,130
Now obviously if we had like thousands of results, this wouldn't be very efficient because we're making

9
00:00:41,130 --> 00:00:42,510
all of these separate requests.

10
00:00:42,510 --> 00:00:45,240
But I mean, this isn't a production app or anything.

11
00:00:45,250 --> 00:00:48,560
It's basically just, you know, for learning purposes and for fun.

12
00:00:48,570 --> 00:00:50,420
So and there's only one fifty.

13
00:00:50,460 --> 00:00:53,340
It's not you know, it fetches it pretty quickly.

14
00:00:53,340 --> 00:00:55,440
So we're fine now.

15
00:00:55,440 --> 00:00:58,560
And here we want to, first of all, create a div.

16
00:00:58,560 --> 00:01:07,380
So I'm going to call this pokey, call us Pokémon L for Element and say document dot creates elements

17
00:01:07,830 --> 00:01:09,160
and we want to create a div.

18
00:01:09,240 --> 00:01:15,390
So basically what we're doing here is constructing these divs, these Pokémon devs, and they have a

19
00:01:15,390 --> 00:01:17,880
class of Pokémon.

20
00:01:17,880 --> 00:01:29,610
So we want to add that by saying pokie or Pokemon elements, class list dot add class of Pokémon.

21
00:01:31,230 --> 00:01:39,630
Now we're going to create basically a template here for our HTML, so let's call this Pokémon in our

22
00:01:40,330 --> 00:01:43,410
HTML and we'll set this to some back ticks.

23
00:01:44,130 --> 00:01:51,330
And what I'm going to do for now is just grab everything that's in one of these Pokémon divs, which

24
00:01:51,330 --> 00:01:53,550
is just the image container and the info.

25
00:01:54,060 --> 00:01:58,440
I'm going to copy that and then I'm going to get rid of everything that's in the initial pokey container.

26
00:01:58,440 --> 00:02:04,260
So all of those devs, all you should be left with in the HTML is just this.

27
00:02:04,860 --> 00:02:10,980
OK, so in our script here, we just going to paste that in and we'll just kind of fix this up a little

28
00:02:10,980 --> 00:02:11,280
bit.

29
00:02:14,120 --> 00:02:17,190
OK, and then we want to insert this into our HTML.

30
00:02:17,300 --> 00:02:23,540
So let's say our pokey, we want our elements of Pokémon element.

31
00:02:23,700 --> 00:02:31,220
We want to set the entire HTML to Pokémon in our HTML and then to put it into the DOM.

32
00:02:31,220 --> 00:02:41,540
We want to take the container so poky underscore container and we want to call append dot the pen child

33
00:02:42,200 --> 00:02:49,160
and we're going to put in the Pokémon elements or Hokey Pokey Marnel.

34
00:02:49,470 --> 00:02:54,650
So now if I say if we get all these cards now, these are just as hard coded data, we need to make

35
00:02:54,650 --> 00:02:55,840
this dynamic right.

36
00:02:56,630 --> 00:03:02,960
So the image is really easy because it's just this Eurail and then the I.D. and we have the ID on this

37
00:03:02,990 --> 00:03:03,650
object.

38
00:03:03,650 --> 00:03:12,680
It's just dot I.D. So let's replace this one here with money saying Curly Braces Pokémon dot d.

39
00:03:14,900 --> 00:03:17,300
And now you can see we have all the different images.

40
00:03:18,890 --> 00:03:20,500
The next thing would be the name.

41
00:03:21,380 --> 00:03:23,520
So the name is right here.

42
00:03:23,550 --> 00:03:29,990
Now, I could we could do Pokémon name, and that's fine.

43
00:03:29,990 --> 00:03:31,580
But you'll see it's lowercase.

44
00:03:31,580 --> 00:03:33,710
I actually want to uppercase the first one.

45
00:03:33,980 --> 00:03:42,350
So I'm going to create a variable up here called name and take the Pokémon dog name.

46
00:03:43,160 --> 00:03:52,730
And if we say Daudt to uppercase, so if we add that and then we put down here just name, you'll see

47
00:03:52,730 --> 00:03:55,420
that it's all uppercase because that's what this method does.

48
00:03:55,430 --> 00:03:57,560
I want just the first letter uppercase.

49
00:03:57,950 --> 00:04:02,450
Now with a string you can grab, you can use an index just like an array.

50
00:04:02,450 --> 00:04:05,920
So if I want just the first letter, I can take just zero.

51
00:04:06,440 --> 00:04:06,860
All right.

52
00:04:06,870 --> 00:04:10,460
So I'm going to set this name variable to just the first letter uppercase.

53
00:04:10,460 --> 00:04:12,590
And if I save, that's what we get.

54
00:04:12,950 --> 00:04:20,660
Now, let's add on the rest of the word so we can do that by taking the Pokémon DOT name and we're going

55
00:04:20,660 --> 00:04:25,430
to use slice and with slice, we can get part of a string.

56
00:04:25,430 --> 00:04:32,360
So I want to say I want to I want to slice from the one position on K, because you can look at it like

57
00:04:32,360 --> 00:04:32,750
a string.

58
00:04:32,750 --> 00:04:34,700
The first one zero second one one.

59
00:04:35,000 --> 00:04:37,670
I mean, you can look at it like an array, even though it's a string.

60
00:04:37,940 --> 00:04:43,670
So we want from the second letter, which is the one position on so if I save now, you can see we have

61
00:04:43,670 --> 00:04:45,760
uppercase and the rest is lowercase.

62
00:04:47,300 --> 00:04:49,910
So let's see for the I.D. here.

63
00:04:51,530 --> 00:04:52,390
Where is that.

64
00:04:52,400 --> 00:05:02,780
So we have number and we could do Pokémon dot I.D. but I do want to pat it with zeros.

65
00:05:03,260 --> 00:05:11,990
So what I'll do is create a variable up here called I d set it to Pokémon dot I.D. and we want to first

66
00:05:11,990 --> 00:05:19,160
make it to string, so convert it to string and then I want to pat it with zeros and there's a method

67
00:05:19,160 --> 00:05:20,370
called pad star.

68
00:05:20,750 --> 00:05:22,330
OK, we want to pad the beginning.

69
00:05:22,970 --> 00:05:28,370
So basically three spaces, we want to pad it with zero.

70
00:05:29,620 --> 00:05:35,290
And then down here, instead of Pokémon ID, I'm going to use just I.D. and now we get zero zero one

71
00:05:35,290 --> 00:05:36,820
zero zero two, so on.

72
00:05:37,600 --> 00:05:44,070
Now the type is going to be a little difficult because it's an array, right?

73
00:05:44,080 --> 00:05:53,950
If we can so log Pokémon DOT types and we look down here, we have an array.

74
00:05:53,950 --> 00:05:55,570
Some have to, some have one.

75
00:05:55,810 --> 00:05:59,380
They're objects with a type, object with a name value.

76
00:05:59,920 --> 00:06:09,820
So let's create a variable here called type and set that actually first of all, let's get.

77
00:06:11,720 --> 00:06:22,250
Let's get the type names, so let's say pokey dash types and set that to Coatimundi types, which is

78
00:06:22,250 --> 00:06:25,730
what I just showed you, but I want to use MAP to create a new array.

79
00:06:26,060 --> 00:06:32,360
So map we loop through and we'll say for each type I want to return the type, which is an object and

80
00:06:32,360 --> 00:06:34,700
I want to get the type dot name.

81
00:06:35,780 --> 00:06:44,870
OK, and if I cancel like this, so poky underscored types.

82
00:06:47,790 --> 00:06:55,460
When we take a look, we have these arrays with zero fire, one flying, so just an array of objects

83
00:06:55,460 --> 00:06:56,020
with the type.

84
00:06:57,650 --> 00:07:05,270
Now, to get the actual type of the current Pokémon, I'm going to first go up here.

85
00:07:05,270 --> 00:07:09,220
So we have the colors, which has all the types that we need.

86
00:07:09,230 --> 00:07:17,500
So I just want to create an object that'll be, you know, zero fire, one grass and so on.

87
00:07:17,510 --> 00:07:21,230
So I'm going to create a variable called main types right here.

88
00:07:21,980 --> 00:07:29,020
And we can use object dot keys because we want to use these keys here as the values.

89
00:07:29,020 --> 00:07:30,880
So let's pass in colors.

90
00:07:30,900 --> 00:07:39,800
And now if I can so log main types and we take a look, we just have an array of all the different types

91
00:07:40,250 --> 00:07:41,900
with no indexes.

92
00:07:42,620 --> 00:07:46,850
So let's go back down and underwear.

93
00:07:46,850 --> 00:07:52,580
I have Pogi types, let's say consed and tie all this type.

94
00:07:53,100 --> 00:07:59,770
Want to take the main types, which is just a numbered list of types and we want to find.

95
00:07:59,990 --> 00:08:06,530
So I'm going to call find where the types are going to loop through and say we're the type

96
00:08:09,230 --> 00:08:19,520
or I should say where the Pogi types index we're going to use index of and then pass in that specific

97
00:08:19,520 --> 00:08:20,900
type or that iteration.

98
00:08:20,900 --> 00:08:27,200
And we want to see if it's greater than negative one, because if there's no match index of this method

99
00:08:27,200 --> 00:08:28,880
right here returns a negative one.

100
00:08:28,880 --> 00:08:31,220
So we want to see if it's greater than negative one.

101
00:08:31,580 --> 00:08:36,290
If it is, then that type is in there and we'll get put in this variable.

102
00:08:37,280 --> 00:08:37,700
All right.

103
00:08:37,710 --> 00:08:44,600
So now down here where we have the type this grass right here, I'm going to replace with type.

104
00:08:46,500 --> 00:08:55,230
OK, so you can see grass, grass, grass fire, fire, water, so now it's just taking the main type

105
00:08:55,230 --> 00:08:56,330
and putting it in there.

106
00:08:58,010 --> 00:09:06,710
Now, we also want the color to change depending on the type, right, so now that we have this type

107
00:09:06,710 --> 00:09:12,170
variable, let's set a variable here called color and set that to the colors array.

108
00:09:12,530 --> 00:09:18,070
And remember the index or the keys, I should say, of these colors are the types.

109
00:09:18,740 --> 00:09:26,900
So we just want to use that particular type for that card or that iteration as the index for colors.

110
00:09:27,170 --> 00:09:29,810
And then we just can simply set the element.

111
00:09:29,820 --> 00:09:35,120
So Pokémon element will set the style so we can grab any excess style.

112
00:09:35,120 --> 00:09:41,360
We want the background color, so background, color, and we want to set it to that particular color

113
00:09:42,020 --> 00:09:42,890
so we'll save.

114
00:09:42,890 --> 00:09:45,320
And now the background is going to depend on the type.

115
00:09:45,330 --> 00:09:52,580
So fire has this red grass has this green water, blue bug is this orange and so on.

116
00:09:54,400 --> 00:09:55,750
OK, and that's pretty much it.

117
00:09:55,760 --> 00:09:57,290
And of course this is responsive.

118
00:09:57,290 --> 00:10:02,240
It just it's a twelve hundred pixel container with flex items that wrap.

119
00:10:02,250 --> 00:10:04,100
So they just go on to the next line.

120
00:10:05,920 --> 00:10:06,380
All right.

121
00:10:06,390 --> 00:10:07,380
So that's it.

122
00:10:07,400 --> 00:10:09,410
Hopefully you guys enjoyed this little project.

123
00:10:09,410 --> 00:10:11,320
And like I said, this API is really cool.

124
00:10:11,330 --> 00:10:15,890
You can if you know more about Pokémon, you can deal with abilities and stuff like that.

125
00:10:15,890 --> 00:10:18,050
I don't I don't really know anything about that.

126
00:10:18,050 --> 00:10:23,000
So, yeah, like like most other projects, I'd encourage you to build on to this.
